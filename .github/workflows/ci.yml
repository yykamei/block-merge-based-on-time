name: CI
on:
  push:
    branches: [main]
  pull_request:
  pull_request_target:
    types: [labeled]
  workflow_dispatch:
jobs:
  ci:
    if: github.event_name != 'pull_request_target'
    continue-on-error: true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ["20", "22"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          check-latest: true
          cache: npm
      - run: npm ci
      - run: npm run fmt:check
      - run: npm run lint
      - run: npm test
  dependency-review:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/dependency-review-action@v4
  auto-build-trusted:
    if: github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
      - uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          ref: ${{ github.head_ref }}
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          check-latest: true
          cache: npm
      - run: npm ci
      - run: npm run build
      - run: git diff --exit-code --quiet
        id: git_diff
        continue-on-error: true
      - uses: yykamei/actions-git-push@main
        if: steps.git_diff.outcome == 'failure'
        with:
          commit-message: "Run `npm run build`"
  auto-build-untrusted:
    if: github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          check-latest: true
          cache: npm
      - run: npm ci
      - run: npm run build
      - run: git diff --exit-code --quiet
        id: git_diff
        continue-on-error: true
      - name: Comment on PR if build artifacts are out of date
        if: steps.git_diff.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const issue_number = context.payload.pull_request.number;
            
            const comment = `❌ **Build artifacts are out of date**
            
            This forked pull request has build artifacts that are out of date. Since this is a forked repository, the automated build process cannot push changes back to your branch.
            
            **To fix this issue, please run the following commands in your local repository:**
            
            \`\`\`bash
            npm run build
            git add dist/
            git commit -m "Update build artifacts"
            git push
            \`\`\`
            
            After pushing the updated build artifacts, this check will pass automatically.`;
            
            // Check if we already commented on this PR
            const comments = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number,
            });
            
            const existingComment = comments.data.find(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes('Build artifacts are out of date')
            );
            
            if (!existingComment) {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number,
                body: comment
              });
            }
      - name: Fail the job if build artifacts are out of date
        if: steps.git_diff.outcome == 'failure'
        run: |
          echo "❌ Build artifacts are out of date. Please run 'npm run build' locally and commit the changes."
          exit 1
